#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
using namespace std;
//判断素数的函数
bool sushu(int num)
{
    //初始化可以被整除的数量为0
    int a = 0;
    //素数规定：大于1的数才可以做求素数算法
    //小于等于1的数无法做素数算法(返回false 不是素数)
    if (num < 2)
        return false;
    //从i=2开始(因为任何数%1都=0 因此排除1)一直计算到<num(不能等于num 因为整除得1余0)
    for (int i = 2; i < num; i++)
    {
        //求余 如果余数为0说明可以被整除，说明不是质数
        if (num % i == 0)
        {
            a++;  // 素数个数加1
        }
    }
    //这里只要判断如果能被整除(自身含有素数 则a!=0)
    if (a == 0)
    {
        return true;//无法被除了1和本身以外任何数整除 是质数 返回true
    }
    else
    {
        return false;
    }
    return false;//以防万一返回false 其实没啥用
}
int main() {
    // PROB:编程：将1～100的自然数存到一个有100个元素的
    //整型数组中（数组的下标为0～99），请在屏幕上输出如下数据：
    //1）在屏幕上输出存储的100个自然数，每行输出10个，各数值之间用空格隔开。
    //2）将序号是素数的数据输出到屏幕上，格式要求：每行输出10个，各数值之间用一个空格隔开。

    // 定义一个数组
    int all[100] = { 0 };
    // 给这个数组赋值 从1~100
    for (int i = 0; i < 100; i++) {
        all[i] = i + 1;
    }
    //输出这个数组 格式化一行10个
    //为了满足输出格式(防止出现“格式错误”错误)进行修改
    for (int i = 0; i < 100; i++) {
        //输出数值
        cout << all[i];
        //判断一行是否输出满10个 用余10 看是否为0
        if ((i + 1) % 10 == 0) {
            //为0代表输出满10个了 换行
            cout << '\n';
        }
        else {
            //不为0代表输出不满10个 空格
            cout << ' ';
        }
    }
    //定义一个临时变量 负责统计已经输出了多少个数字了，用来控制换行
    int lins = 0;
    for (int i = 0; i < 100; i++) {
        //获取当前数据 存储到临时变量now中
        int now = all[i];
        // 判断下标（注意！！是下标！！）是否为素数
        if (sushu(i)) {
            //是，输出数据（注意！！是数据！！不是下标！）
            cout << now;
            lins++;
            //换行 和上面的同理
            if (lins % 10 == 0)
                cout << '\n';
            else
                //防止输出到最后还输出空格出现格式错误，判断一下(到最后的时候不输出空格了)
                if (now <= 96)
                    cout << ' ';
        }
    }
    return 0;
}